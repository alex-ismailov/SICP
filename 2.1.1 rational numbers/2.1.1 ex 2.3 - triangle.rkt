#lang racket
(define (make-point x y)
  (cons x y))
(define (x-point point)
  (car point))
(define (y-point point)
  (cdr point))
(define (print-point p)
  (display "(")
  (display (x-point p))
  (display ";")
  (display (y-point p))
  (display ")"))

(define (make-rectangle point w h)
  (cons point (cons w h)))
(define (get-start-point r)
  (car r))
(define (get-width r)
  (car (cdr r)))
(define (get-height r)
  (cdr (cdr r)))
(define (perimeter r)
  (* 2
     (+ (get-width r)
        (get-height r))))
(define (square r)
  (* (get-width r)
     (get-height r)))
(define (print-rectangle r)
  (display "(")
  (print-point (get-start-point r))
  (display ";")
  (display (get-width r))
  (display ";")
  (display (get-height r))
  (display ")"))

(define trngl (make-rectangle
               (make-point -5 7)
               15
               20))